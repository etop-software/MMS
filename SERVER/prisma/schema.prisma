generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Employee {
  id           Int            @id @default(autoincrement())
  name         String
  group        Int?
  privilege    Int?
  createdAt    DateTime       @default(now())
  pin          Int            @unique
  department   String?
  email        String?
  employeeId   Int?
  phone        String?
  password     String?
  RFID         String?
  startTime    String?        @default("09:00")
  endTime      String?        @default("18:00")
  areaAccess   AreaAccess[]
  deviceAccess DeviceAccess[]
}

model AreaAccess {
  id         Int      @id @default(autoincrement())
  employeeId Int
  areaId     Int
  area       Area     @relation(fields: [areaId], references: [id])
  employee   Employee @relation(fields: [employeeId], references: [id])
}

model DeviceAccess {
  id         Int      @id @default(autoincrement())
  employeeId Int
  deviceId   Int
  areaId     Int
  area       Area     @relation(fields: [areaId], references: [id])
  device     Device   @relation(fields: [deviceId], references: [id])
  employee   Employee @relation(fields: [employeeId], references: [id])
}

model Device {
  id               Int            @id @default(autoincrement())
  deviceName       String
  SN               String         @unique
  areaId           Int
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  faceCount        Int?
  fpCount          Int?
  ipAddress        String?
  transactionCount Int?
  userCount        Int?
  area             Area           @relation(fields: [areaId], references: [id])
  deviceAccess     DeviceAccess[]
  mealRules        MealRule[]
}

model Area {
  id             Int              @id @default(autoincrement())
  name           String
  description    String
  areaAccess     AreaAccess[]
  devices        Device[]
  deviceAccess   DeviceAccess[]
  mealRules      MealRule[]
  userAreaAccess UserAreaAccess[]
}

model MealType {
  mealTypeId  Int        @id
  name        String
  description String
  mealRules   MealRule[]
}

model MealRule {
  id         Int      @id @default(autoincrement())
  mealTypeId Int
  areaId     Int
  startTime  String
  endTime    String
  days       String[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  deviceId   Int?
  area       Area     @relation(fields: [areaId], references: [id])
  device     Device?  @relation(fields: [deviceId], references: [id])
  mealType   MealType @relation(fields: [mealTypeId], references: [mealTypeId])

  @@unique([mealTypeId, areaId, deviceId])
}

model Logs {
  id              Int      @id @default(autoincrement())
  time            DateTime
  pin             Int
  cardno          Int
  eventaddr       Int
  event           Int
  inoutstatus     Int
  verifytype      Int
  index           Int
  sitecode        Int
  linkid          Int
  maskflag        Int
  temperature     Int
  convtemperature Int
  createdAt       DateTime @default(now())
}

model User {
  id         Int              @id @default(autoincrement())
  username   String           @unique
  password   String
  name       String
  userType   String
  createdAt  DateTime         @default(now())
  areaAccess UserAreaAccess[]
}

model UserAreaAccess {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int
  area   Area @relation(fields: [areaId], references: [id])
  areaId Int
}
